# -*- coding: utf-8 -*-
"""simple overfitting and early stop.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gsopv2VeWdLLwDyaqlWPlbaYIvJXYk51
"""

#tamrin hafte ghabl eid


from keras.models import Sequential
from keras.layers import Dense
from keras.utils import to_categorical

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn import preprocessing

iris = load_iris()
X = preprocessing.scale(iris['data'])
Y = to_categorical(iris['target'])

#training data and test data
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)

#model
model = Sequential()
model.add(Dense(6, input_dim=4, activation='relu'))
model.add(Dense(3, activation='softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

#fitting the model
history=model.fit(X_train, Y_train, validation_data=(X_test, Y_test), epochs=300, batch_size=5)

import matplotlib.pyplot as plt
plt.plot(history.history['loss'], label='train')
plt.plot(history.history['val_loss'], label='test')
plt.legend()
plt.show()

from tensorflow.keras.callbacks import EarlyStopping
#regmodel
reg_model = Sequential()
reg_model.add(Dense(6, input_dim=4, activation='relu'))
reg_model.add(Dense(3, activation='softmax'))
reg_model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
reg_history = reg_model.fit(X_train, Y_train, 
                            validation_data=(X_test, Y_test), 
                            epochs=300, 
                            batch_size=5,
                            callbacks=EarlyStopping(monitor='val_loss'))

plt.plot(reg_history.history['loss'], label='train')
plt.plot(reg_history.history['val_loss'], label='test')
plt.legend()
plt.show()